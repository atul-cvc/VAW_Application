@model VAW_WebApplication.Models.Tran_4_otheractivities_ViewModel

@{
    ViewBag.Title = "CreateOtherActivities";
    Layout = "~/Views/Shared/_Layout_Users.cshtml";
}

<h2>OTHER ACTIVITIES</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.VAW_Year, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.VAW_Year, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.VAW_Year, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.UniqueTransactionId)
                @Html.HiddenFor(model => model.CvoOrgCode)
                @Html.HiddenFor(model => model.CvoId)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DateOfActivity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateOfActivity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DateOfActivity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DisplayOfBannerPosterDetails, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.DisplayOfBannerPosterDetails, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.TextAreaFor(model => model.DisplayOfBannerPosterDetails, new { @class = "textarea-custom-h-50", @id = "myTextArea" })
                <div id="wordCount" style="margin-top: 10px; margin-left:150px;">Word count: 0 / 500</div>
                @Html.ValidationMessageFor(model => model.DisplayOfBannerPosterDetails, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NoOfGrievanceRedressalCampsHeld, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NoOfGrievanceRedressalCampsHeld, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NoOfGrievanceRedressalCampsHeld, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UserOfScocialMedia, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.UserOfScocialMedia, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.TextAreaFor(model => model.UserOfScocialMedia, new { @class = "textarea-custom-h-50", @id = "myTextAreaUserOfScocialMedia" })
                <div id="wordCountUserOfScocialMedia" style="margin-top: 10px; margin-left:150px;">Word count: 0 / 500</div>
                @Html.ValidationMessageFor(model => model.UserOfScocialMedia, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-success" />
                </div>
            </div>*@
        <div class="form-group">
            <div class="row">
                <div class="col-md-offset-2 col-md-2">
                    @Html.ActionLink("Back", "Index", null, new { @class = "btn btn-primary" })
                </div>
                <div class="col-md-2">
                    <input type="submit" value="Save" class="btn btn-success" />
                </div>
            </div>

        </div>

    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const textArea = document.getElementById('myTextAreaUserOfScocialMedia');
            const wordCountDisplay = document.getElementById('wordCountUserOfScocialMedia');
            const maxWords = 500;

            textArea.addEventListener('input', function () {
                const words = textArea.value.trim().split(/\s+/).filter(Boolean);
                const wordCount = words.length;

                if (wordCount > maxWords) {
                    textArea.value = words.slice(0, maxWords).join(' ');
                }

                wordCountDisplay.textContent = `Word count: ${Math.min(wordCount, maxWords)} / ${maxWords}`;
            });
        });
    </script>
}
