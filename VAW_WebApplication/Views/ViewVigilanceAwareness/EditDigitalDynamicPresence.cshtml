@model VAW_WebApplication.Models.Tran_a_5b_dynamicdigitalpresence_ViewModel

@{
    ViewBag.Title = "EditDigitalDynamicPresence";
    Layout = "~/Views/Shared/_Layout_Users.cshtml";
}

<h2>Edit Dynamic Digital Presence</h2>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.VAW_Year, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.VAW_Year, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                @Html.HiddenFor(model => model.ID)                
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.WhetherRegularMaintenanceOfWebsiteUpdationDone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.WhetherRegularMaintenanceOfWebsiteUpdationDone, Model.YesNoOptions, "-Select-", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.WhetherRegularMaintenanceOfWebsiteUpdationDone, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.SystemIntroducedForUpdationAndReview, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.SystemIntroducedForUpdationAndReview, new { @class = "textarea-custom", @id = "myTextArea" })
                <div id="wordCount" style="margin-top: 10px; margin-left:150px;">Word count: 0 / 500</div>
                @Html.ValidationMessageFor(model => model.SystemIntroducedForUpdationAndReview, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.WhetherAdditionalAreas_Activities_ServicesBroughtOnline, "Whether Additional Areas, Activities, or Services Brought Online (Yes/No)", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.WhetherAdditionalAreas_Activities_ServicesBroughtOnline, Model.YesNoOptionsforAdditionalAreas, "-Select-", new { @class = "form-control", @id = "ddladditionalAreas" })
                @Html.ValidationMessageFor(model => model.WhetherAdditionalAreas_Activities_ServicesBroughtOnline, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group" id="DivforddladditionalAreas">
            @Html.LabelFor(model => model.DetailsOfAdditionalActivities, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.DetailsOfAdditionalActivities, new { @class = "textarea-custom", @id = "myTextArea1" })
                <div id="wordCount1" style="margin-top: 10px; margin-left:150px;">Word count: 0 / 500</div>
                @Html.ValidationMessageFor(model => model.DetailsOfAdditionalActivities, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="row">
                <div class="col-md-offset-2 col-md-2">
                    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-primary" })
                </div>
                <div class="col-md-2">
                    <input type="submit" value="Update" class="btn btn-success" />
                </div>
            </div>

        </div>
    </div>
}



<div>
    @section Scripts {

        @Scripts.Render("~/bundles/jqueryui")
        @Styles.Render("~/Content/cssjqryUi")

        <script type="text/javascript">
            $(document).ready(function () {
                $('input[type=datetime]').datepicker({
                    dateFormat: "dd/M/yy",
                    changeMonth: true,
                    changeYear: true,
                    yearRange: "-60:+0"
                });

            });

        </script>

        <script>
            
            document.addEventListener('DOMContentLoaded', function () {
                const textArea = document.getElementById('myTextArea');
                const wordCountDisplay = document.getElementById('wordCount');
                const maxWords = 500;

                function mytextWordCount() {
                    const words = textArea.value.trim().split(/\s+/).filter(Boolean);
                    const wordCount = words.length;

                    if (wordCount > maxWords) {
                        textArea.value = words.slice(0, maxWords).join(' ');
                    }

                    wordCountDisplay.textContent = `Word count: ${Math.min(wordCount, maxWords)} / ${maxWords}`;
                }
                mytextWordCount();
                textArea.addEventListener('input', mytextWordCount);
            });

            document.addEventListener('DOMContentLoaded', function () {
                const textArea = document.getElementById('myTextArea1');
                const wordCountDisplay = document.getElementById('wordCount1');
                const maxWords = 500;

                function mytextWordCount() {
                    const words = textArea.value.trim().split(/\s+/).filter(Boolean);
                    const wordCount = words.length;

                    if (wordCount > maxWords) {
                        textArea.value = words.slice(0, maxWords).join(' ');
                    }

                    wordCountDisplay.textContent = `Word count: ${Math.min(wordCount, maxWords)} / ${maxWords}`;
                }                              
                mytextWordCount();
                textArea.addEventListener('input', mytextWordCount);
            });

            document.addEventListener('DOMContentLoaded', function () {
                const dropdown = document.getElementById('ddladditionalAreas');
                const myDiv = document.getElementById('DivforddladditionalAreas');

                function updateDivVisibility() {
                    if (dropdown.value === 'YES') {
                        myDiv.style.display = 'block'; // Show the div
                    } else {
                        myDiv.style.display = 'none'; // Hide the div
                    }
                }

                // Check on page load
                updateDivVisibility();

                // Add event listener for dropdown changes
                dropdown.addEventListener('change', updateDivVisibility);
            });
            

        </script>

    }
    @*@Html.ActionLink("Back to List", "Index")*@
</div>
