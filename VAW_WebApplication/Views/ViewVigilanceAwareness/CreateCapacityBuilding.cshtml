@model VAW_WebApplication.Models.Tran_a_1b_capacitybulidingprogram_ViewModel

@{
    ViewBag.Title = "Capacity Building";
    Layout = "~/Views/Shared/_Layout_Users.cshtml";
}

<h2>Capacity Building Program</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">        
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })       

        <div class="form-group">
            @*@Html.LabelFor(model => model.VAW_Year, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2" for="VAW_Year">VAW YEAR</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.VAW_Year, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                @Html.HiddenFor(model => model.UniqueTransactionId)
                @Html.HiddenFor(model => model.CvoOrgCode)
                @Html.HiddenFor(model => model.CvoId)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FromDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FromDate, new { @htmlAttributes = new { @class = "form-control", @placeholder = "DD-MM-YYYY", @readonly = "true" } })
                @Html.ValidationMessageFor(model => model.FromDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ToDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ToDate, new { @htmlAttributes = new { @class = "form-control", @placeholder = "DD-MM-YYYY", @readonly = "true" } })
                @Html.ValidationMessageFor(model => model.ToDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TrainingName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.TrainingName, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.DropDownListFor(model => model.TrainingName, Model.TrainingNameList, "Select a Name", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TrainingName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmployeesTrained, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EmployeesTrained, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EmployeesTrained, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BriefDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BriefDescription, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BriefDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-2 d-flex justify-content-center">
                <div class="">

                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
<div>
    @section Scripts {

        @Scripts.Render("~/bundles/jqueryui")
        @Styles.Render("~/Content/cssjqryUi")

        <script type="text/javascript">
            $(document).ready(function () {
                $('input[type=datetime]').datepicker({
                    dateFormat: "dd/M/yy",
                    changeMonth: true,
                    changeYear: true,
                    yearRange: "-60:+0"
                });

            });
        </script>

    }
    @*@Html.ActionLink("Back to List", "Index")*@
</div>
